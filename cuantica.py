'''GRUPO JUAN JOSE ALVAREZ ; BRAYAN TINJACA ; JHONATHAN GOMEZ'''
import unittest
from clasicoacuantico import *
import math
class clasicoacuantico(unittest.TestCase):
   def testExperimento( self ):
       Matriz_D_R = [
           [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
           [[1 / math.sqrt(2), 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
           [[1 / math.sqrt(2), 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
           [[0, 0], [-1 / math.sqrt(6), 1 / math.sqrt(6)], [0, 0], [1, 0], [0, 0], [0, 0], [0, 0], [0, 0]],
           [[0, 0], [-1 / math.sqrt(6), -1 / math.sqrt(6)], [0, 0], [0, 0], [1, 0], [0, 0], [0, 0], [0, 0]],
           [[0, 0], [1 / math.sqrt(6), -1 / math.sqrt(6)], [-1 / math.sqrt(6), 1 / math.sqrt(6)], [0, 0], [0, 0],[1, 0], [0, 0], [0, 0]],
           [[0, 0], [0, 0], [-1 / math.sqrt(6), -1 / math.sqrt(6)], [0, 0], [0, 0], [0, 0], [1, 0], [0, 0]],
           [[0, 0], [0, 0], [1 / math.sqrt(6), -1 / math.sqrt(6)], [0, 0], [0, 0], [0, 0], [0, 0], [1, 0]]]
       
       Inicial = [[1, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
       
       self.assertEqual(testExperimento(Matriz_D_R[:],
                                                      Inicial[:], 2),
                                                      [[[0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0]],
                                                       [[0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0]],
                                                       [[0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0]],
                                                       [[0.1666666666666667, 0], [0.3333333333333334, 0], [0.0, 0], [1.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0]],
                                                       [[0.1666666666666667, 0], [0.3333333333333334, 0], [0.0, 0], [0.0, 0], [1.0, 0], [0.0, 0], [0.0, 0], [0.0, 0]],
                                                       [[0.0, 0], [0.3333333333333334, 0], [0.3333333333333334, 0], [0.0, 0], [0.0, 0], [1.0, 0], [0.0, 0], [0.0, 0]],
                                                       [[0.1666666666666667, 0], [0.0, 0], [0.3333333333333334, 0], [0.0, 0], [0.0, 0], [0.0, 0], [1.0, 0], [0.0, 0]],
                                                       [[0.1666666666666667, 0], [0.0, 0], [0.3333333333333334, 0], [0.0, 0], [0.0, 0], [0.0, 0], [0.0, 0], [1.0, 0]]]             )
       
       
       resp = actionMatrixVector( multipleSlitQuantumExperiment(Matriz_D_R[:],
                                                      Inicial[:], 2),  Inicial)
       graphProbabilitiesVector(resp)
if __name__ == '__main__':
    unittest.main()
